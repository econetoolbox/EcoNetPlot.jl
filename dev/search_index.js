var documenterSearchIndex = {"docs":
[{"location":"#Plotting-ecological-networks","page":"Home","title":"Plotting ecological networks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A plotting package for ecological networks (food webs and more) powered by GraphMakie  and UMAP. Direct integration with EcologicalNetworksDynamics.","category":"page"},{"location":"#Plotting-from-an-adjacency-matrix","page":"Home","title":"Plotting from an adjacency matrix","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Let's say that you have an adjacency matrix which represent an ecological networks, say, a food web. Elements A[i,j] = 1 means that species i eats species j. Adjacency matrix are useful tool to encode networks, but they are not very visual. The present package allows you to plot networks from adjacency matrix.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For example, let's that we have two herbivores (2 and 3) eating the same plant (1). To plot this network, we simple need to write the corresponding adjacency matrix and give it to the function plot_network.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Random #hide\nRandom.seed!(123) #hide\nusing EcoNetPlot\n\nA = [\n    0 0 0 # Producer (1).\n    1 0 0 # Hervibore (2).\n    1 0 0 # Herbivore (3).\n]\nplot_network(A)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We see that species are positioned vertically according to their trophic levels. This is a very simple network, used simply to illustrate the main goal of the package. But plotting can be performed on more complex networks. For example, we can add predators feeding on herbivores in the previous network.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A = [\n    0 0 0 0 0\n    1 0 0 0 0\n    1 0 0 0 0\n    0 1 0 0 0 # Predator eating herbivore 2.\n    0 0 1 0 0 # Predator eating herbivore 3.\n]\nplot_network(A)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can further add a top predator that feed on the herbivore's predators.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A = [\n    0 0 0 0 0 0\n    1 0 0 0 0 0\n    1 0 0 0 0 0\n    0 1 0 0 0 0\n    0 0 1 0 0 0\n    0 0 0 1 1 0 # Adding top predator.\n]\nplot_network(A)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Interestingly, we can see that two energy channels are well-separated thanks to the UMAP embedding.","category":"page"},{"location":"#From-a-Foodweb-or-a-Model","page":"Home","title":"From a Foodweb or a Model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can plot a network directly from a Foodweb object of EcologicalNetworksDynamics. For example","category":"page"},{"location":"","page":"Home","title":"Home","text":"using EcologicalNetworksDynamics\n\nfw = Foodweb(:niche; S = 10, C = 0.1, reject_cycles = true)\nplot_network(fw)","category":"page"},{"location":"docstrings/#Docstrings","page":"Functions","title":"Docstrings","text":"","category":"section"},{"location":"docstrings/#EcoNetPlot.plot_network-Tuple{EcologicalNetworksDynamics.Foodweb_.Matrix}","page":"Functions","title":"EcoNetPlot.plot_network","text":"plot_network(fw::END.Foodweb; kwargs...)\n\nPlotting directly from a Foodweb object of EcologicalNetworksDynamics.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#EcoNetPlot.plot_network-Tuple{Model}","page":"Functions","title":"EcoNetPlot.plot_network","text":"plot_network(m::END.Model; kwargs...)\n\nPlotting directly from a Model object of EcologicalNetworksDynamics.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#EcoNetPlot.spread_points-Tuple{Any}","page":"Functions","title":"EcoNetPlot.spread_points","text":"spread_points(vec; min_dist = 0.015)\n\nSpace points so they do not overlap.\n\n\n\n\n\n","category":"method"}]
}
